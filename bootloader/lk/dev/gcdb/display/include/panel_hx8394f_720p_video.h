/* Copyright (c) 2013, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of The Linux Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*---------------------------------------------------------------------------
 * This file is autogenerated file using gcdb parser. Please do not edit it.
 * Update input XML file to add a new entry or update variable in this file
 * VERSION = "1.0"
 *---------------------------------------------------------------------------*/

#ifndef _PANEL_HX8394F_720P_VIDEO_H_
#define _PANEL_HX8394F_720P_VIDEO_H_
/*---------------------------------------------------------------------------*/
/* HEADER files                                                              */
/*---------------------------------------------------------------------------*/
#include "panel.h"

/*---------------------------------------------------------------------------*/
/* Panel configuration                                                       */
/*---------------------------------------------------------------------------*/
static struct panel_config hx8394f_720p_video_panel_data = {
	"qcom,mdss_dsi_hx8394f_720p_video", /* panel_node_id */
	"dsi:0:",   /* panel_controller */
	"qcom,mdss-dsi-panel",  /* panel_compatible */
	10, /* panel_interface */
	0,  /* panel_type */
	"DISPLAY_1", /* panel_destination */
	0,  /* panel_orientation */
	0,  /* panel_clockrate */
	60, /* panel_framerate */
	0,  /* panel_channelid */
	0,  /* dsi_virtualchannel_id */
	0,  /* panel_broadcast_mode */
	0,  /* panel_lp11_init */
	0,  /* panel_init_delay */
	0,  /* dsi_stream */
	0,  /*  interleave_mode */
	0,  /* panel_bitclock_freq */
	0,  /* panel_operating_mode */
	0,  /* panel_with_enable_gpio */
	0,  /* mode_gpio_state */
	"qcom,mdss_dsi_hx8394f_720p_dsi1_video" //"qcom,mdss_dsi_lt8912_1080p"/* slave_panel_node_id */
};

/*---------------------------------------------------------------------------*/
/* Panel resolution                                                          */
/*---------------------------------------------------------------------------*/
static struct panel_resolution hx8394f_720p_video_panel_res = {
	720,    /* panel_width */
    1280,   /* panel_height */
    50,     /* hfront_porch */
    50,     /* hback_porch */
    50,     /* hpulse_width */
    0,      /* hsync_skew */
    8,      /* vfront_porch */
    20,     /* vback_porch */
    4,      /* vpulse_width */
    0,      /* hleft_border */
    0,      /* hright_border */
    0,      /* vtop_border */
    0,      /* vbottom_border */
    0,      /* hactive_res */
    0,      /* uint16_t vactive_res */
    0,      /* invert_data_polarity */
    0,      /* invert_vsync_polarity */
    0       /* invert_hsync_polarity */
};

/*---------------------------------------------------------------------------*/
/* Panel color information                                                   */
/*---------------------------------------------------------------------------*/
static struct color_info hx8394f_720p_video_color = {
	24,     /* color_format */
    0,      /* color_order */
    0xff,   /* underflow_color */
    0,      /* border_color */
    0,      /* pixel_packing */
    0       /* pixel_alignment */
};

/*---------------------------------------------------------------------------*/
/* Panel on/off command information                                          */
/*---------------------------------------------------------------------------*/
static char hx8394f_720p_video_on_cmd0[] = {
	0x04, 0x00, 0x29, 0xC0,
	0xB9, 0xFF, 0x83, 0x94,

};

static char hx8394f_720p_video_on_cmd1[] = {
	0x07, 0x00, 0x29, 0xC0,
	0xBA, 0x63, 0x03, 0x68,
	0x6b, 0xb2, 0xc0, 0xFF,
};

static char hx8394f_720p_video_on_cmd2[] = {
	0x0B, 0x00, 0x29, 0xC0,
	0xB1, 0x50, 0x12, 0x72,
	0x09, 0x33, 0x54, 0xB1,
	0x31, 0x6B, 0x2F, 0xFF,
};

static char hx8394f_720p_video_on_cmd3[] = {
	0x07, 0x00, 0x29, 0xC0,
	0xB2, 0x00, 0x80, 0x64,
	0x0e, 0x0d, 0x2f, 0xFF,
};

static char hx8394f_720p_video_on_cmd4[] = {
	0x16, 0x00, 0x29, 0xC0,
	0xB4, 0x73, 0x74, 0x73,
	0x74, 0x73, 0x74, 0x01,
	0x0C, 0x86, 0x75, 0x00,
	0x3F, 0x73, 0x74, 0x73,
	0x74, 0x73, 0x74, 0x01,
	0x0C, 0x86, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd5[] = {
	0x22, 0x00, 0x29, 0xC0,
	0xD3, 0x00, 0x00, 0x07,
	0x07, 0x40, 0x07, 0x10,
	0x00, 0x08, 0x10, 0x08,
	0x00, 0x08, 0x54, 0x15,
	0x0e, 0x05, 0x0e, 0x02,
	0x15, 0x06, 0x05, 0x06,
	0x47, 0x44, 0x0a, 0x0a,
	0x4b, 0x10, 0x07, 0x07,
	0x0e, 0x40, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd6[] = {
	0x2D, 0x00, 0x29, 0xC0,
	0xD5, 0x1a, 0x1a, 0x1b,
	0x1b, 0x00, 0x01, 0x02,
	0x03, 0x04, 0x05, 0x06,
	0x07, 0x08, 0x09, 0x0a,
	0x0b, 0x24, 0x25, 0x18,
	0x18, 0x26, 0x27, 0x18,
	0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x20,
	0x21, 0x18, 0x18, 0x18,
	0x18, 0xFF, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd7[] = {
	0x2D, 0x00, 0x29, 0xC0,
	0xD6, 0x1a, 0x1a, 0x1b,
	0x1b, 0x0b, 0x0a, 0x09,
	0x08, 0x07, 0x06, 0x05,
	0x04, 0x03, 0x02, 0x01,
	0x00, 0x21, 0x20, 0x18,
	0x18, 0x27, 0x26, 0x18,
	0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x25,
	0x24, 0x18, 0x18, 0x18,
	0x18, 0xFF, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd8[] = {
	0x3B, 0x00, 0x29, 0xC0,
	0xE0, 0x00, 0x0D, 0x1B,
	0x22, 0x25, 0x2A, 0x2F,
	0x2C, 0x5A, 0x6B, 0x7A,
	0x77, 0x7E, 0x8E, 0x92,
	0x95, 0x9F, 0x9E, 0x99,
	0xa1, 0xb0, 0x57, 0x55,
	0x5C, 0x5F, 0x5F, 0x67,
	0x6F, 0x7f, 0x00, 0x0D,
	0x1B, 0x22, 0x25, 0x2A,
	0x2F, 0x2C, 0x5A, 0x6B,
	0x7A, 0x77, 0x7E, 0x8E,
	0x92, 0x95, 0x9F, 0x9E,
	0x99, 0xa1, 0xb0, 0x57,
	0x55, 0x5C, 0x5F, 0x5F,
	0x67, 0x6F, 0x7f, 0xFF,
};

static char hx8394f_720p_video_on_cmd9[] = {
	0x03, 0x00, 0x29, 0xC0,
	0xC0, 0x1f, 0x31, 0xFF,
};

static char hx8394f_720p_video_on_cmd10[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xCC, 0x0B, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd11[] = {
	0x03, 0x00, 0x29, 0xC0,
	0xB6, 0x78, 0x78, 0xFF,
};

static char hx8394f_720p_video_on_cmd12[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xD4, 0x02, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd13[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xBD, 0x02, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd14[] = {
	0x0D, 0x00, 0x29, 0xC0,
	0xD8, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd15[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xBD, 0x00, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd16[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xBD, 0x01, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd17[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xB1, 0x00, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd18[] = {
	0x02, 0x00, 0x29, 0xC0,
	0xBD, 0x00, 0xFF, 0xFF,
};

static char hx8394f_720p_video_on_cmd19[] = {
	0x08, 0x00, 0x29, 0xC0,
	0xBF, 0x40, 0x81, 0x50,
	0x00, 0x1A, 0xFC, 0x01,

};

static char hx8394f_720p_video_on_cmd20[] = {
	0x11, 0x00, 0x05, 0x80
};

static char hx8394f_720p_video_on_cmd21[] = {
	0x29, 0x00, 0x05, 0x80
};

static struct mipi_dsi_cmd hx8394f_720p_video_on_command[] = {
	{0x8, hx8394f_720p_video_on_cmd0, 0x00},
	{0xc, hx8394f_720p_video_on_cmd1, 0x00},
	{0x10, hx8394f_720p_video_on_cmd2, 0x00},
	{0xc, hx8394f_720p_video_on_cmd3, 0x00},
	{0x1c, hx8394f_720p_video_on_cmd4, 0x00},
	{0x28, hx8394f_720p_video_on_cmd5, 0x00},
	{0x34, hx8394f_720p_video_on_cmd6, 0x00},
	{0x34, hx8394f_720p_video_on_cmd7, 0x00},
	{0x40, hx8394f_720p_video_on_cmd8, 0x00},
	{0x8, hx8394f_720p_video_on_cmd9, 0x00},
	{0x8, hx8394f_720p_video_on_cmd10, 0x00},
	{0x8, hx8394f_720p_video_on_cmd11, 0x00},
	{0x8, hx8394f_720p_video_on_cmd12, 0x00},
	{0x8, hx8394f_720p_video_on_cmd13, 0x00},
	{0x14, hx8394f_720p_video_on_cmd14, 0x00},
	{0x8, hx8394f_720p_video_on_cmd15, 0x00},
	{0x8, hx8394f_720p_video_on_cmd16, 0x00},
	{0x8, hx8394f_720p_video_on_cmd17, 0x00},
	{0x8, hx8394f_720p_video_on_cmd18, 0x00},
	{0xc, hx8394f_720p_video_on_cmd19, 0x00},
	{0x4, hx8394f_720p_video_on_cmd20, 0x78},
	{0x4, hx8394f_720p_video_on_cmd21, 0x05}
};

#define HX8394F_720P_VIDEO_ON_COMMAND 22


static char hx8394f_720p_videooff_cmd0[] = {
	0x28, 0x00, 0x05, 0x80
};

static char hx8394f_720p_videooff_cmd1[] = {
	0x10, 0x00, 0x05, 0x80
};

static struct mipi_dsi_cmd hx8394f_720p_video_off_command[] = {
	{0x4, hx8394f_720p_videooff_cmd0, 0x32},
	{0x4, hx8394f_720p_videooff_cmd1, 0x78}
};

#define HX8394F_720P_VIDEO_OFF_COMMAND 2

static char hx8394f_720p_video_read_id_cmd0[4] = { 0xDA, 0x00, 0x06, 0xA0 };
//static char hx8394f_720p_video_read_id_cmd1[4] = { 0xDB, 0x00, 0x06, 0xA0 };
//static char hx8394f_720p_video_read_id_cmd2[4] = { 0xDC, 0x00, 0x06, 0xA0 };

static struct mipi_dsi_cmd hx8394f_720p_read_id_command =
	{sizeof(hx8394f_720p_video_read_id_cmd0), hx8394f_720p_video_read_id_cmd0, 0x00};

#define HX8394F_720P_VIDEO_SIGNATURE 0x8314

static struct command_state hx8394f_720p_video_state = {
	0, 1
};

/*---------------------------------------------------------------------------*/
/* Command mode panel information                                            */
/*---------------------------------------------------------------------------*/
static struct commandpanel_info hx8394f_720p_video_command_panel = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

/*---------------------------------------------------------------------------*/
/* Video mode panel information                                              */
/*---------------------------------------------------------------------------*/
static struct videopanel_info hx8394f_720p_video_video_panel = {
	1,      /* hsync_pulse */
    0,      /* hfp_power_mode */
    0,      /* hbp_power_mode */
    0,      /* hsa_power_mode */
    1,      /* bllp_eof_power_mode */
    1,      /* bllp_power_mode */
    2,      /* traffic_mode */
    0,      /* dma_delayafter_vsync */
    0x9     /* bllp_eof_power */
};

/*---------------------------------------------------------------------------*/
/* Lane configuration                                                        */
/*---------------------------------------------------------------------------*/
static struct lane_configuration hx8394f_720p_video_lane_config = {
	4, 0, 1, 1, 1, 1, 0
};

/*---------------------------------------------------------------------------*/
/* Panel timing                                                              */
/*---------------------------------------------------------------------------*/
static const uint32_t hx8394f_720p_video_timings[] = {
    0x7B, 0x1A, 0x10, 0x00, 0x3C, 0x40, 0x14, 0x1C, 0x15, 0x03, 0x04, 0x00
};

/*-->add by rid, only for msm8953<--*/
static const uint32_t hx8394f_720p_14nm_video_timings[] = {
    0x1e, 0x1b, 0x4, 0x5, 0x2, 0x3, 0x4, 0xa0,
    0x1e, 0x1b, 0x4, 0x5, 0x2, 0x3, 0x4, 0xa0,
    0x1e, 0x1b, 0x4, 0x5, 0x2, 0x3, 0x4, 0xa0,
    0x1e, 0x1b, 0x4, 0x5, 0x2, 0x3, 0x4, 0xa0,
    0x1e, 0x0d, 0x3, 0x5, 0x2, 0x3, 0x4, 0xa0,
};

static struct panel_timing hx8394f_720p_video_timing_info = {
	0,      /* dsi_mdp_trigger */
    4,      /* dsi_dma_trigger */
    0x04,   /* tclk_post */
    0x1A    /* tclk_pre */
};

/*---------------------------------------------------------------------------*/
/* Panel reset sequence                                                      */
/*---------------------------------------------------------------------------*/
static struct panel_reset_sequence hx8394f_720p_video_reset_seq = {
	{1, 0, 1, }, {20, 2, 60, }, 2
};

/*---------------------------------------------------------------------------*/
/* Backlight setting                                                         */
/*---------------------------------------------------------------------------*/
static struct backlight hx8394f_720p_video_backlight = {
	1, 1, 4095, 100, 1, "PMIC_8941"
};

#endif /*_PANEL_HX8394F_720P_VIDEO_H_*/
